<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UhJjvqVHNPsAAAAASUVORK5CYII=
</value>
  </data>
</root>